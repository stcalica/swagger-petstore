{
	"info": {
		"_postman_id": "1f9907b9-b569-40e8-800a-764e038672ab",
		"name": "Petstore API",
		"description": "A sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\n Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\n You can now help us improve the API whether it's by making changes to the definition itself or to the code.\n That way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n Some useful links:\n - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "25426789-1f9907b9-b569-40e8-800a-764e038672ab"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "Add a new pet to the store",
					"id": "7f75d69d-3427-4b7d-bf38-c47dabf3971d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "write:pets read:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ",
									"key": "name",
									"value": "<string>"
								},
								{
									"description": "(Required) ",
									"key": "photoUrls",
									"value": "<string>"
								},
								{
									"key": "id",
									"value": "<long>"
								},
								{
									"key": "tags",
									"value": "[object Object]"
								},
								{
									"description": "pet status in the store",
									"key": "status",
									"value": "sold"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						},
						"description": "Add a new pet to the store"
					},
					"response": [
						{
							"id": "d125530c-f8eb-47b0-857b-77889ab33dfa",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/xml"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) ",
											"key": "name",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"description": "pet status in the store",
											"key": "status",
											"value": "sold"
										}
									]
								},
								"url": {
									"raw": "/v3/pet",
									"path": [
										"v3",
										"pet"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
						},
						{
							"id": "f074de67-afaa-42c3-8794-e6a6d663af89",
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) ",
											"key": "name",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"description": "pet status in the store",
											"key": "status",
											"value": "sold"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Update an existing pet",
					"id": "778120bf-aa18-4f33-929e-1c85cf91ec65",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "write:pets read:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ",
									"key": "name",
									"value": "<string>"
								},
								{
									"description": "(Required) ",
									"key": "photoUrls",
									"value": "<string>"
								},
								{
									"key": "id",
									"value": "<long>"
								},
								{
									"key": "tags",
									"value": "[object Object]"
								},
								{
									"description": "pet status in the store",
									"key": "status",
									"value": "sold"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						},
						"description": "Update an existing pet by Id"
					},
					"response": [
						{
							"id": "211d2bbf-cce8-47cd-88c7-319f232b2e3b",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/xml"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) ",
											"key": "name",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"description": "pet status in the store",
											"key": "status",
											"value": "sold"
										}
									]
								},
								"url": {
									"raw": "/v3/pet",
									"path": [
										"v3",
										"pet"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
						},
						{
							"id": "570d3019-670c-4fdf-a534-e5620e51a8aa",
							"name": "Invalid ID supplied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) ",
											"key": "name",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"description": "pet status in the store",
											"key": "status",
											"value": "sold"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "65f12110-0cce-44d2-abde-c4954779bbec",
							"name": "Pet not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) ",
											"key": "name",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"description": "pet status in the store",
											"key": "status",
											"value": "sold"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "e2ac52a6-4dad-48e8-b640-df26adb6e4f2",
							"name": "Validation exception",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) ",
											"key": "name",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "photoUrls",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"key": "tags",
											"value": "[object Object]"
										},
										{
											"description": "pet status in the store",
											"key": "status",
											"value": "sold"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Finds Pets by status",
					"id": "81f274a8-c0e5-40b1-b0e4-59416e7196b8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "write:pets read:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"description": "Status values that need to be considered for filter",
									"key": "status",
									"value": "available"
								}
							]
						},
						"description": "Multiple status values can be provided with comma separated strings"
					},
					"response": [
						{
							"id": "f6ad7735-a21e-4a50-a92c-bf30c0aa190d",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "/v3/pet/findByStatus?status=available",
									"path": [
										"v3",
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"description": "Status values that need to be considered for filter",
											"key": "status",
											"value": "available"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"pending\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"sold\"\n  }\n]"
						},
						{
							"id": "768a37b0-799a-44e5-8edf-608102370502",
							"name": "Invalid status value",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"description": "Status values that need to be considered for filter",
											"key": "status",
											"value": "available"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Finds Pets by tags",
					"id": "1ec4278f-4617-401b-9b8f-14349e3e1635",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "write:pets read:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"description": "Tags to filter by",
									"key": "tags",
									"value": "<string>"
								},
								{
									"description": "Tags to filter by",
									"key": "tags",
									"value": "<string>"
								}
							]
						},
						"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
					},
					"response": [
						{
							"id": "5a4bd9c7-f113-45d1-929e-aeff92e1ce1d",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "/v3/pet/findByTags?tags=<string>",
									"path": [
										"v3",
										"pet",
										"findByTags"
									],
									"query": [
										{
											"description": "Tags to filter by",
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"pending\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"sold\"\n  }\n]"
						},
						{
							"id": "3267a8ee-cb07-4b91-bf37-06123ec694c2",
							"name": "Invalid tag value",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"description": "Tags to filter by",
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Find pet by ID",
					"id": "bb0e69ba-7e2a-4ca0-bfa8-7d7d4ca1245c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "<long>",
									"description": "(Required) ID of pet to return"
								}
							]
						},
						"description": "Returns a single pet"
					},
					"response": [
						{
							"id": "07b2c55d-cfb9-43fc-87eb-21435c7ec167",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "/v3/pet/:petId",
									"path": [
										"v3",
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
						},
						{
							"id": "1dbbcfcf-934c-4c5c-8c9d-3dee55bbb766",
							"name": "Invalid ID supplied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "d4e77a3f-f0d9-43cf-9fcb-44ee6d4e4797",
							"name": "Pet not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Updates a pet in the store with form data",
					"id": "30bf78bd-1b3d-41ab-b989-6c502bd20429",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "write:pets read:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId?name=<string>&status=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"query": [
								{
									"description": "Name of pet that needs to be updated",
									"key": "name",
									"value": "<string>"
								},
								{
									"description": "Status of pet that needs to be updated",
									"key": "status",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "petId",
									"value": "<long>",
									"description": "(Required) ID of pet that needs to be updated"
								}
							]
						}
					},
					"response": [
						{
							"id": "7510b811-e851-4d14-aa4e-312aabc7fec1",
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "/v3/pet/:petId?name=<string>&status=<string>",
									"path": [
										"v3",
										"pet",
										":petId"
									],
									"query": [
										{
											"description": "Name of pet that needs to be updated",
											"key": "name",
											"value": "<string>"
										},
										{
											"description": "Status of pet that needs to be updated",
											"key": "status",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Deletes a pet",
					"id": "2fdfe3b2-d867-4c3b-84fc-9e823e77dc82",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "write:pets read:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "<long>",
									"description": "(Required) Pet id to delete"
								}
							]
						}
					},
					"response": [
						{
							"id": "ec228ca1-c0d5-48b0-973f-fe3221df9664",
							"name": "Invalid pet value",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "api_key",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "/v3/pet/:petId",
									"path": [
										"v3",
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "uploads an image",
					"id": "cd045e68-4f5f-49a1-8d0c-555ff8447039",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "write:pets read:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/octet-stream"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/:petId/uploadImage?additionalMetadata=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId",
								"uploadImage"
							],
							"query": [
								{
									"description": "Additional Metadata",
									"key": "additionalMetadata",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "petId",
									"value": "<long>",
									"description": "(Required) ID of pet to update"
								}
							]
						}
					},
					"response": [
						{
							"id": "76e619dd-37a7-404b-929c-635ccc6fa3d4",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/octet-stream"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "/v3/pet/:petId/uploadImage?additionalMetadata=<string>",
									"path": [
										"v3",
										"pet",
										":petId",
										"uploadImage"
									],
									"query": [
										{
											"description": "Additional Metadata",
											"key": "additionalMetadata",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "7762837c-6aea-4367-9d74-07915a543a3c",
			"description": "Everything about your Pets"
		},
		{
			"name": "store",
			"item": [
				{
					"name": "Returns pet inventories by status",
					"id": "70f3816c-7bba-4833-af34-5f5b2ae812c3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						},
						"description": "Returns a map of status codes to quantities"
					},
					"response": [
						{
							"id": "b42990d9-accb-44a4-a774-007d6fd8cfe8",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "/v3/store/inventory",
									"path": [
										"v3",
										"store",
										"inventory"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ut8ba\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Place an order for a pet",
					"id": "8e3458f8-2a01-4c96-995e-f7697c847389",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "<long>"
								},
								{
									"key": "petId",
									"value": "<long>"
								},
								{
									"key": "quantity",
									"value": "<integer>"
								},
								{
									"key": "shipDate",
									"value": "<dateTime>"
								},
								{
									"description": "Order Status",
									"key": "status",
									"value": "approved"
								},
								{
									"key": "complete",
									"value": "<boolean>"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/store/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						},
						"description": "Place a new order in the store"
					},
					"response": [
						{
							"id": "f7cf797a-33aa-40e5-9139-4ec563c9e4a7",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "petId",
											"value": "<long>"
										},
										{
											"key": "quantity",
											"value": "<integer>"
										},
										{
											"key": "shipDate",
											"value": "<dateTime>"
										},
										{
											"description": "Order Status",
											"key": "status",
											"value": "approved"
										},
										{
											"key": "complete",
											"value": "<boolean>"
										}
									]
								},
								"url": {
									"raw": "/v3/store/order",
									"path": [
										"v3",
										"store",
										"order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"approved\",\n  \"complete\": \"<boolean>\"\n}"
						},
						{
							"id": "1a9c974e-81f5-4a93-bfea-2c60e2a88a77",
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "petId",
											"value": "<long>"
										},
										{
											"key": "quantity",
											"value": "<integer>"
										},
										{
											"key": "shipDate",
											"value": "<dateTime>"
										},
										{
											"description": "Order Status",
											"key": "status",
											"value": "approved"
										},
										{
											"key": "complete",
											"value": "<boolean>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Find purchase order by ID",
					"id": "9d72d284-bc69-4a79-afb1-aaee41c59622",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/store/order/:orderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "<long>",
									"description": "(Required) ID of order that needs to be fetched"
								}
							]
						},
						"description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions."
					},
					"response": [
						{
							"id": "211ab0d9-8829-4d92-ae37-2a999421743f",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/store/order/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"approved\",\n  \"complete\": \"<boolean>\"\n}"
						},
						{
							"id": "cd5a8f93-b1a2-4c25-81ef-ade407854d1d",
							"name": "Invalid ID supplied",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a4b39135-1bd9-4dc8-b5c0-ca9f045601a1",
							"name": "Order not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Delete purchase order by ID",
					"id": "874c17c4-2905-4fe6-b951-cb9ccd3d55f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/:orderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "<long>",
									"description": "(Required) ID of the order that needs to be deleted"
								}
							]
						},
						"description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors"
					},
					"response": [
						{
							"id": "7f258224-bb63-44b2-b866-55c337cb197b",
							"name": "Invalid ID supplied",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "798cfe08-a41e-4c3c-b4f8-631aecc4e180",
							"name": "Order not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "bf9abd60-776c-4b69-8dc2-49878e35edcc",
			"description": "Access to Petstore orders"
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Create user",
					"id": "74505283-aa53-4625-98b0-a33ca0651330",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "<long>"
								},
								{
									"key": "username",
									"value": "<string>"
								},
								{
									"key": "firstName",
									"value": "<string>"
								},
								{
									"key": "lastName",
									"value": "<string>"
								},
								{
									"key": "email",
									"value": "<string>"
								},
								{
									"key": "password",
									"value": "<string>"
								},
								{
									"key": "phone",
									"value": "<string>"
								},
								{
									"description": "User Status",
									"key": "userStatus",
									"value": "<integer>"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "This can only be done by the logged in user."
					},
					"response": [
						{
							"id": "c10ed882-dbdc-49e1-ba53-6488ea625457",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "password",
											"value": "<string>"
										},
										{
											"key": "phone",
											"value": "<string>"
										},
										{
											"description": "User Status",
											"key": "userStatus",
											"value": "<integer>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Creates list of users with given input array",
					"id": "00a16e8e-5e6c-451c-a7d3-dc8c1f275083",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						},
						"description": "Creates list of users with given input array"
					},
					"response": [
						{
							"id": "eb9f8060-2c6f-481b-a6e0-4336cb68ddfd",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/createWithList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"createWithList"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}"
						},
						{
							"id": "f693560f-37b6-4a3c-97a4-dabd09110a80",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/createWithList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"createWithList"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Logs user into the system",
					"id": "5d7c66bb-bee1-4f04-97b4-7d7fa7784924",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"description": "The user name for login",
									"key": "username",
									"value": "<string>"
								},
								{
									"description": "The password for login in clear text",
									"key": "password",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "c554b098-368c-4f1b-83a7-2d386824643c",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"description": "The user name for login",
											"key": "username",
											"value": "<string>"
										},
										{
											"description": "The password for login in clear text",
											"key": "password",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "calls per hour allowed by the user",
										"type": "text/plain"
									},
									"key": "X-Rate-Limit",
									"value": "<integer>"
								},
								{
									"disabled": false,
									"description": {
										"content": "date in UTC when token expires",
										"type": "text/plain"
									},
									"key": "X-Expires-After",
									"value": "<dateTime>"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"id": "85d5644c-1ece-4ca4-85df-51beef1094f2",
							"name": "Invalid username/password supplied",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"description": "The user name for login",
											"key": "username",
											"value": "<string>"
										},
										{
											"description": "The password for login in clear text",
											"key": "password",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Logs out current logged in user session",
					"id": "840a9dc8-5a1c-4997-9e44-f521e01666ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": [
						{
							"id": "7558884b-0831-4dec-bda4-bde74eb8595d",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Get user by user name",
					"id": "a833df61-315c-4b3d-b2ed-b165c2509667",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
								}
							]
						}
					},
					"response": [
						{
							"id": "bb4d7b76-b53c-4337-8f13-0b6550124559",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}"
						},
						{
							"id": "d086dbb3-1e06-4496-a6c0-4736f0e5410a",
							"name": "Invalid username supplied",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a3eaa787-37d4-4f75-9e70-1ecefc5b0396",
							"name": "User not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Update user",
					"id": "4337dbcf-2b90-4ba0-8053-96630dd99275",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "<long>"
								},
								{
									"key": "username",
									"value": "<string>"
								},
								{
									"key": "firstName",
									"value": "<string>"
								},
								{
									"key": "lastName",
									"value": "<string>"
								},
								{
									"key": "email",
									"value": "<string>"
								},
								{
									"key": "password",
									"value": "<string>"
								},
								{
									"key": "phone",
									"value": "<string>"
								},
								{
									"description": "User Status",
									"key": "userStatus",
									"value": "<integer>"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) name that needs to be updated"
								}
							]
						},
						"description": "This can only be done by the logged in user."
					},
					"response": [
						{
							"id": "ee73d1ef-9e3b-42b1-9e90-166d5c9fcc38",
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "firstName",
											"value": "<string>"
										},
										{
											"key": "lastName",
											"value": "<string>"
										},
										{
											"key": "email",
											"value": "<string>"
										},
										{
											"key": "password",
											"value": "<string>"
										},
										{
											"key": "phone",
											"value": "<string>"
										},
										{
											"description": "User Status",
											"key": "userStatus",
											"value": "<integer>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Delete user",
					"id": "bf30c28b-969c-4188-b5ef-e559d1ec4dd9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) The name that needs to be deleted"
								}
							]
						},
						"description": "This can only be done by the logged in user."
					},
					"response": [
						{
							"id": "11b1e69e-970a-498c-b856-d2b47317744a",
							"name": "Invalid username supplied",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "ded11c74-1757-4dc2-b22d-e89586da10d7",
							"name": "User not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "0a03072f-0a49-484e-a5a9-3551225f9560",
			"description": "Operations about user"
		}
	],
	"variable": [
		{
			"id": "5a7693c4-ab35-488a-8cc6-d227b66d85c3",
			"key": "baseUrl",
			"value": "/v3",
			"type": "any"
		}
	]
}